// Code generated by wit-bindgen-go. DO NOT EDIT.

//go:build !wasip1

// Package incominghandler represents the exported interface "wasi:http/incoming-handler@0.2.0".
//
// This interface defines a handler of incoming HTTP Requests. It should
// be exported by components which can respond to HTTP Requests.
package incominghandler

import (
	"github.com/rajatjindal/wasip2-http-incoming-handler/wasi/http/types"
)

// Handle represents the caller-defined, exported function "handle".
//
// This function is invoked with an incoming HTTP Request, and a resource
// `response-outparam` which provides the capability to reply with an HTTP
// Response. The response is sent by calling the `response-outparam.set`
// method, which allows execution to continue after the response has been
// sent. This enables both streaming to the response body, and performing other
// work.
//
// The implementor of this function must write a response to the
// `response-outparam` before returning, or else the caller will respond
// with an error on its behalf.
//
//	handle: func(request: incoming-request, response-out: response-outparam)
var Handle = func(request types.IncomingRequest, responseOut types.ResponseOutparam) {
	panic("unimplemented export: wasi:http/incoming-handler@0.2.0#handle")
}

//go:wasmexport wasi:http/incoming-handler@0.2.0#handle
//export wasi:http/incoming-handler@0.2.0#handle
func wasmexport_Handle(request types.IncomingRequest, responseOut types.ResponseOutparam) {
	Handle(request, responseOut)
}
